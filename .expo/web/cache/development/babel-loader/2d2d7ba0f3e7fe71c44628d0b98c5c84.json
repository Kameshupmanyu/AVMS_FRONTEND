{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { response } from \"express\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Fetch() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var resp = axios.get('https://jsonplaceholder.typicode.com/todos').then(function (response) {\n      return response.data;\n    });\n    var data = resp.json();\n    setData(data);\n  }, []);\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(Center, {\n      flex: 1,\n      children: [_jsx(Box, {\n        children: \" Fetch API\"\n      }), loading && _jsx(Box, {\n        children: \"Loading..\"\n      }), data && _jsx(FlatList, {\n        data: data,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","axios","response","Fetch","data","setData","resp","get","then","json","loading","renderItem","item","id","toString"],"sources":["D:/AVMS/Login/fetch.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\"\r\nimport{\r\n    View,\r\n    Text\r\n} from 'react-native';\r\nimport { response } from \"express\";\r\nexport default function Fetch() {\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n     const resp= axios.get('https://jsonplaceholder.typicode.com/todos')\r\n      .then(response => response.data)\r\n     \r\n      \r\n      const data = resp.json();\r\n      setData(data);\r\n      },[]);\r\n    \r\n    return (\r\n        <NativeBaseProvider>\r\n        <Center flex={1}>\r\n        <Box> Fetch API</Box>\r\n          {loading && <Box>Loading..</Box>}\r\n          {data && (\r\n            <FlatList\r\n              data={data}\r\n              renderItem={renderItem}\r\n              keyExtractor={(item) => item.id.toString()}\r\n            />\r\n          )}\r\n        </Center>\r\n      </NativeBaseProvider>\r\n    );\r\n  }"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAKA,SAASC,QAAT,QAAyB,SAAzB;;;AACA,eAAe,SAASC,KAAT,GAAiB;EAC5B,gBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOK,IAAP;EAAA,IAAaC,OAAb;;EACAL,SAAS,CAAC,YAAM;IACf,IAAMM,IAAI,GAAEL,KAAK,CAACM,GAAN,CAAU,4CAAV,EACVC,IADU,CACL,UAAAN,QAAQ;MAAA,OAAIA,QAAQ,CAACE,IAAb;IAAA,CADH,CAAZ;IAIC,IAAMA,IAAI,GAAGE,IAAI,CAACG,IAAL,EAAb;IACAJ,OAAO,CAACD,IAAD,CAAP;EACC,CAPM,EAOL,EAPK,CAAT;EASA,OACI,KAAC,kBAAD;IAAA,UACA,MAAC,MAAD;MAAQ,IAAI,EAAE,CAAd;MAAA,WACA,KAAC,GAAD;QAAA;MAAA,EADA,EAEGM,OAAO,IAAI,KAAC,GAAD;QAAA;MAAA,EAFd,EAGGN,IAAI,IACH,KAAC,QAAD;QACE,IAAI,EAAEA,IADR;QAEE,UAAU,EAAEO,UAFd;QAGE,YAAY,EAAE,sBAACC,IAAD;UAAA,OAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;QAAA;MAHhB,EAJJ;IAAA;EADA,EADJ;AAeD"},"metadata":{},"sourceType":"module"}
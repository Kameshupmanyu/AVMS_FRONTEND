{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Fetch(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var fetchexample = function fetchexample() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1', {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      setData(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: data\n    }), _jsx(Button, {\n      title: \"Press Me\",\n      onPress: function onPress() {\n        fetchexample();\n      }\n    })]\n  });\n}\n\nexport default Fetch;","map":{"version":3,"names":["React","Component","useState","Fetch","route","navigation","data","setData","fetchexample","fetch","method","then","response","json","responseJson","console","log","catch","error"],"sources":["D:/AVMS/Login/fetch.js"],"sourcesContent":["import React, { Component, useState } from 'react'\r\nimport { View, Text,TouchableOpacity,Button } from 'react-native'\r\n\r\nfunction Fetch({route,navigation}) {\r\n   const[data,setData]=useState('');\r\n\r\n   const fetchexample = () => {\r\n      fetch('https://jsonplaceholder.typicode.com/todos/1', {\r\n         method: 'GET'\r\n      })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n         console.log(responseJson);\r\n         setData(responseJson);\r\n      })\r\n      .catch((error) => {\r\n         console.error(error);\r\n      });\r\n   }\r\n      return (\r\n         <View>\r\n            <Text>{data}</Text>\r\n            <Button\r\n            title=\"Press Me\"\r\n            onPress={()=>{fetchexample()}}/>\r\n         </View>\r\n      )\r\n}\r\nexport default Fetch;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAGA,SAASC,KAAT,OAAmC;EAAA,IAAnBC,KAAmB,QAAnBA,KAAmB;EAAA,IAAbC,UAAa,QAAbA,UAAa;;EAChC,gBAAoBH,QAAQ,CAAC,EAAD,CAA5B;EAAA;EAAA,IAAMI,IAAN;EAAA,IAAWC,OAAX;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACxBC,KAAK,CAAC,8CAAD,EAAiD;MACnDC,MAAM,EAAE;IAD2C,CAAjD,CAAL,CAGCC,IAHD,CAGM,UAACC,QAAD;MAAA,OAAcA,QAAQ,CAACC,IAAT,EAAd;IAAA,CAHN,EAICF,IAJD,CAIM,UAACG,YAAD,EAAkB;MACrBC,OAAO,CAACC,GAAR,CAAYF,YAAZ;MACAP,OAAO,CAACO,YAAD,CAAP;IACF,CAPD,EAQCG,KARD,CAQO,UAACC,KAAD,EAAW;MACfH,OAAO,CAACG,KAAR,CAAcA,KAAd;IACF,CAVD;EAWF,CAZD;;EAaG,OACG,MAAC,IAAD;IAAA,WACG,KAAC,IAAD;MAAA,UAAOZ;IAAP,EADH,EAEG,KAAC,MAAD;MACA,KAAK,EAAC,UADN;MAEA,OAAO,EAAE,mBAAI;QAACE,YAAY;MAAG;IAF7B,EAFH;EAAA,EADH;AAQL;;AACD,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}